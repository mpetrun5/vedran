// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import models "github.com/NodeFactoryIo/vedran/internal/models"

// PayoutRepository is an autogenerated mock type for the PayoutRepository type
type PayoutRepository struct {
	mock.Mock
}

// FindLatestPayout provides a mock function with given fields:
func (_m *PayoutRepository) FindLatestPayout() (*models.Payout, error) {
	ret := _m.Called()

	var r0 *models.Payout
	if rf, ok := ret.Get(0).(func() *models.Payout); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Payout)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAll provides a mock function with given fields:
func (_m *PayoutRepository) GetAll() (*[]models.Payout, error) {
	ret := _m.Called()

	var r0 *[]models.Payout
	if rf, ok := ret.Get(0).(func() *[]models.Payout); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]models.Payout)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: payment
func (_m *PayoutRepository) Save(payment *models.Payout) error {
	ret := _m.Called(payment)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Payout) error); ok {
		r0 = rf(payment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
